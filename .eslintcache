[{"/home/naeem/Documents/React_folder/react-task/src/index.js":"1","/home/naeem/Documents/React_folder/react-task/src/App.js":"2","/home/naeem/Documents/React_folder/react-task/src/reportWebVitals.js":"3","/home/naeem/Documents/React_folder/react-task/src/PendendData.js":"4","/home/naeem/Documents/React_folder/react-task/src/CompnentsData.js":"5","/home/naeem/Documents/React_folder/react-task/src/FinalData.js":"6","/home/naeem/Documents/React_folder/react-task/src/dbTable.js":"7","/home/naeem/Documents/React_folder/react-task/src/usersTableData.js":"8","/home/naeem/Documents/React_folder/react-task/src/IntialData.js":"9","/home/naeem/Documents/React_folder/react-task/src/Headings/intialHeading.js":"10","/home/naeem/Documents/React_folder/react-task/src/Headings/pendingHeading.js":"11","/home/naeem/Documents/React_folder/react-task/src/Headings/finalHeading.js":"12","/home/naeem/Documents/React_folder/react-task/src/pagination.js":"13","/home/naeem/Documents/React_folder/react-task/src/components/registration.js":"14","/home/naeem/Documents/React_folder/react-task/src/components/loginForm.js":"15"},{"size":643,"mtime":1620316967792,"results":"16","hashOfConfig":"17"},{"size":1532,"mtime":1620631897172,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1612344156106,"results":"19","hashOfConfig":"17"},{"size":2788,"mtime":1620720639012,"results":"20","hashOfConfig":"17"},{"size":10572,"mtime":1621349043212,"results":"21","hashOfConfig":"17"},{"size":1373,"mtime":1620720685380,"results":"22","hashOfConfig":"17"},{"size":2191,"mtime":1621349731048,"results":"23","hashOfConfig":"17"},{"size":2617,"mtime":1621350594628,"results":"24","hashOfConfig":"17"},{"size":2358,"mtime":1620726599708,"results":"25","hashOfConfig":"17"},{"size":547,"mtime":1621351737492,"results":"26","hashOfConfig":"17"},{"size":594,"mtime":1621351740868,"results":"27","hashOfConfig":"17"},{"size":516,"mtime":1621351733268,"results":"28","hashOfConfig":"17"},{"size":943,"mtime":1612327980689,"results":"29","hashOfConfig":"17"},{"size":10695,"mtime":1620726020904,"results":"30","hashOfConfig":"17"},{"size":5368,"mtime":1620728148144,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"18x5dhp",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},"/home/naeem/Documents/React_folder/react-task/src/index.js",[],["69","70"],"/home/naeem/Documents/React_folder/react-task/src/App.js",[],"/home/naeem/Documents/React_folder/react-task/src/reportWebVitals.js",[],"/home/naeem/Documents/React_folder/react-task/src/PendendData.js",["71","72"],"import React, { Component } from \"react\";\nimport { Card, ListGroup, ListGroupItem, Button } from \"react-bootstrap\";\nimport \"./intialData.css\";\nimport FinalData from \"./FinalData\";\n\nclass PendingData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      item: this.props,\n      showState: \"\",\n    };\n    // this.showCompleteData = this.showCompleteData.bind(this);\n  }\n  // dataHolder(){\n  //     const tempvar=this.props.PendingData;\n  //     console.log(\"tempcar\",tempvar);\n  // }\n  //   showCompleteData(clickedId) {\n  //     this.state.item.filter((filterItems) => {\n  //       if (filterItems.id === clickedId) {\n  //         // temparray.push({id:filterItems.id, img:filterItems.img, userName:filterItems.userName,},);\n  //         this.setState({\n  //           showState: [\n  //             ...this.state.showState,\n  //             {\n  //               id: filterItems.id,\n  //               img: filterItems.img,\n  //               userName: filterItems.userName,\n  //             },\n  //           ],\n  //         });\n  //       }\n  //     });\n  //     const currentIt = this.state.item.filter(\n  //       (filterItems) => filterItems.id !== clickedId\n  //     );\n  //     this.setState({ item: currentIt });\n  //   }\n\n  render() {\n    const { identityitem, img, name, showCompleteData, priority } = this.props;\n    // console.log(\"pending Data\", this.props);\n    return (\n      <div className=\"intial_data\" key={identityitem}>\n        <Card\n          style={{ width: \"18rem\", height: \"10rem\" }}\n          className=\"mainCard extraClass\"\n          key={identityitem}\n        >\n          {/* <Card.Img\n            style={{ width: \"50%\", height: \"50%\", margin: \"0 auto\" }}\n            variant=\"top\"\n            src={img}\n          /> */}\n\n          <Card.Body>\n            <Card.Title>{name}</Card.Title>\n            <Card.Text>\n              {identityitem} | {priority} |\n              <span style={{ color: \"green\", fontSize: \"15px\" }}>({img})</span>\n            </Card.Text>\n          </Card.Body>\n          <ListGroup className=\"list-group-flush\">\n            <ListGroupItem>\n              {\" \"}\n              <Button\n                onClick={() => showCompleteData(identityitem)}\n                style={{ background: \"gray\" }}\n              >\n                Mark Complete\n              </Button>\n            </ListGroupItem>\n          </ListGroup>\n        </Card>\n      </div>\n    );\n  }\n}\nconst Heading = () => {\n  return (\n    <div className=\"intialDataHeading\">\n      <Card\n        style={{ width: \"18rem\", padding: \"10px 0 0 0\" }}\n        className=\"mainCard\"\n      >\n        <Card.Title>\n          <span className=\"headings\"> TASKS IN PROCESSING</span>\n        </Card.Title>\n      </Card>\n    </div>\n  );\n};\n\nexport default PendingData;\n","/home/naeem/Documents/React_folder/react-task/src/CompnentsData.js",["73","74","75","76","77","78","79"],"/home/naeem/Documents/React_folder/react-task/src/FinalData.js",["80","81"],"import React, { Component } from \"react\";\nimport { Card, ListGroup, ListGroupItem, Button } from \"react-bootstrap\";\nimport \"./intialData.css\";\n\nclass FinalData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      item: [{ id: 1 }, { id: 2 }, { id: 3 }],\n    };\n  }\n\n  render() {\n    // const renderdata = (tasks) => {\n    const { identityitem, img, name, priority } = this.props;\n    return (\n      <div className=\"intial_data\">\n        <Card\n          style={{ width: \"18rem\", height: \"10rem\" }}\n          className=\"main_Card extraClass\"\n          key={identityitem}\n        >\n          <Card.Body style={{ background: \"white\" }}>\n            <Card.Title style={{ background: \"white\", border: \"5px\" }}>\n              {name}\n            </Card.Title>\n            <Card.Text className=\"paragraphClass\">\n              {identityitem} | {priority} |\n              <span style={{ color: \"green\", fontSize: \"15px\" }}>\n                Visit({img})\n              </span>\n            </Card.Text>\n          </Card.Body>\n          <ListGroup className=\"list-group-flush\">\n            {/* <ListGroupItem>Final Data will be here</ListGroupItem>  */}\n          </ListGroup>\n        </Card>\n      </div>\n    );\n    // };\n\n    // return (\n\n    //     {/* <Heading/> */}\n    //     {this.props.map(renderdata)}\n\n    // );\n  }\n}\n\nexport default FinalData;\n","/home/naeem/Documents/React_folder/react-task/src/dbTable.js",["82","83","84","85","86","87","88","89","90"],"/home/naeem/Documents/React_folder/react-task/src/usersTableData.js",["91","92","93","94","95","96","97","98","99","100","101"],"/home/naeem/Documents/React_folder/react-task/src/IntialData.js",["102","103","104","105"],"import React, { Component } from \"react\";\nimport { Card, ListGroup, ListGroupItem, Button } from \"react-bootstrap\";\nimport PendingData from \"./PendendData\";\nimport FinalData from \"./FinalData\";\nimport \"./intialData.css\";\n\nconst Heading = () => {\n  return (\n    <Card\n      style={{ width: \"18rem\", padding: \"10px 0 0 0\" }}\n      className=\"mainCard intialDataHeading\"\n    >\n      <Card.Title>\n        <span className=\"headings\"> USER REQUESTS</span>\n      </Card.Title>\n    </Card>\n  );\n};\n\nclass IntialData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { newid: this.props.identity, seconid: \"\" };\n    // this.hide=this.hide.bind(this);\n  }\n  // hide(){\n\n  //     this.setState({\n  //         showData:this.state.id,\n  //     })\n\n  // }\n  settngstate() {\n    //  this.setState ({seconid:this.state.newid});\n  }\n\n  render() {\n    const {\n      identity,\n      hospital,\n      img,\n      name,\n      hide,\n      showData,\n      priority,\n      onUpdate,\n    } = this.props;\n\n    return (\n      <div className=\"intial_data\" key={identity}>\n        {/* <Heading/> */}\n        <Card\n          style={{ width: \"18rem\", height: \"10rem\" }}\n          className=\"mainCard extraClass\"\n          key={identity}\n        >\n          {/* <Card.Img style={{width:'50%',height:'50%',margin:'0 auto'}} variant=\"top\" src={img} /> */}\n\n          <Card.Body>\n            <Card.Title>{name}</Card.Title>\n            <Card.Text>\n              {identity} | {priority} | {hospital}\n              <span style={{ color: \"green\", fontSize: \"15px\" }}>({img})</span>\n            </Card.Text>\n          </Card.Body>\n          <ListGroup className=\"list-group-flush\">\n            <ListGroupItem>\n              <div className=\"itemss\">\n                <Button\n                  onClick={() => {\n                    showData(identity);\n                    // onUpdate();\n                  }}\n                >\n                  {\" \"}\n                  Process{\" \"}\n                </Button>{\" \"}\n                <Button\n                  onClick={() => hide(identity)}\n                  style={{ background: \"red\" }}\n                >\n                  {\" \"}\n                  DECLINE{\" \"}\n                </Button>\n              </div>\n            </ListGroupItem>\n          </ListGroup>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default IntialData;\n","/home/naeem/Documents/React_folder/react-task/src/Headings/intialHeading.js",["106","107","108","109"],"/home/naeem/Documents/React_folder/react-task/src/Headings/pendingHeading.js",["110","111","112"],"/home/naeem/Documents/React_folder/react-task/src/Headings/finalHeading.js",["113","114","115"],"/home/naeem/Documents/React_folder/react-task/src/pagination.js",["116","117"],"import { render } from '@testing-library/react';\nimport React from 'react';\nimport './pagination.css';\nconst Pagination=({postsPerPage,totalPosts,paginate,})=>{\n    const pageNumbers=[];\n        for(let i=1; i<=Math.ceil(totalPosts/postsPerPage); i++)\n    {\n        pageNumbers.push(i);\n    }\n    return(\n            \n        <div>\n             <nav>\n               <ul className=\"pagnation\">\n                    {pageNumbers.map(number=>(\n                        <li key={number} className=\"pageNumber\">\n                           <a onClick={()=>paginate(number)}  href='#' className=\"link\"> {number}</a>\n                           {/* {console.log(\"number\",number)} */}\n                        </li>\n                    ))}\n                 </ul>\n                 </nav>\n           \n        </div>\n    );\n    }\n    // console.log(\"function\",tempvar);\n    // var temp=Math.ceil(totalPosts/postsPerPage);\n   \n   \n \n\nexport default Pagination;","/home/naeem/Documents/React_folder/react-task/src/components/registration.js",["118","119","120","121","122","123","124","125","126","127"],"import { React, useEffect, useState, Dimensions } from \"react\";\nimport ComponentsData from \"../CompnentsData\";\nimport axios from \"axios\";\nimport \"./registration.css\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n} from \"mdbreact\";\nimport { isCompositeComponent } from \"react-dom/test-utils\";\nconst FormPage = () => {\n  const history = useHistory();\n  const [getDetail, setDetail] = useState();\n  const [emailcheck, setEmailcheck] = useState(false);\n  const [getlatitude, setlatitude] = useState();\n  const [getlongitude, setlongitude] = useState();\n  const [readMore, setReadMore] = useState(false);\n  const [nameInput, setNameInput] = useState({\n    name: \"naeem\",\n    errorMsg: \"\",\n  });\n  const [nameHospitalInput, setHospitalNameInput] = useState({\n    hospitalname: \"dfdfdf\",\n    hospitalerrorMsg: \"\",\n  });\n  const [hospitalEmail, setHospitalEmail] = useState({\n    hospitalEmailget: \"naeem@gmail.com\",\n    hospitalEmailMsg: \"\",\n  });\n  const [conformHospitalEmail, setConformHospitalEmail] = useState({\n    conformHospitalEmailGet: \"naeem@gmail.com\",\n    conformHospitalEmailMsg: \"\",\n  });\n  const [password, setpassword] = useState({\n    passwordGet: \"dfdfd23@W\",\n    passwordMsg: \"\",\n  });\n  const locationFinder = async () => {\n    navigator.geolocation.getCurrentPosition(\n      function (position) {\n        var lat = parseFloat(position.coords.latitude);\n        var lng = parseFloat(position.coords.longitude);\n        console.log(\"location fo user latitude++\", lat);\n        console.log(\"location fo user logitude\", lng);\n        setlatitude(lat);\n        setlongitude(lng);\n      },\n      function (error) {\n        console.error(\"Error Code = \" + error.code + \" - \" + error.message);\n      }\n    );\n  };\n  console.log(\"longi___\", getlatitude);\n  console.log(\"latitude----\", getlongitude);\n  useEffect(async () => {\n    locationFinder();\n    const response = await fetch(\"http://192.168.1.110:3000/allhospital\");\n    const json = await response.json();\n    console.log(\"data++++\", json.length);\n    setDetail(json);\n    getDetails();\n  }, []);\n  const postApiCall = async (url, data) => {\n    console.log(\"postqueue data: \", data);\n    let headers = { \"content-type\": \"application/json\" };\n    let response = await axios({\n      method: \"POST\",\n      url,\n      data: JSON.stringify(data),\n      headers: { \"content-type\": \"application/json\" },\n    });\n    console.log(\"queue response put= \", response);\n  };\n  const getDetails = async () => {\n    if (getDetail !== undefined) {\n      getDetail.map((value, index) => {\n        if (value.email === hospitalEmail.hospitalEmailget) {\n          setEmailcheck(true);\n        }\n      });\n    }\n  };\n\n  const onSubmit = (e) => {\n    let collection = {};\n    let namecheck = /^[a-zA-Z0-9_ ]*$/;\n    let emailvalidaton = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    let passwordRgx = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/;\n    let isValid = namecheck.test(nameInput.name);\n    let isnamevalid = namecheck.test(nameHospitalInput.hospitalname);\n    let EmailValid = emailvalidaton.test(hospitalEmail.hospitalEmailget);\n    let ConformEmailValid = emailvalidaton.test(\n      conformHospitalEmail.conformHospitalEmailGet\n    );\n\n    let passwordValid = passwordRgx.test(password.passwordGet);\n\n    if (isValid === false || nameInput.name === \"\") {\n      setNameInput({ errorMsg: \"* Name required\" });\n      e.preventDefault();\n      return false;\n    }\n    if (!isnamevalid || nameHospitalInput.hospitalname === \"\") {\n      setHospitalNameInput({ hospitalerrorMsg: \"* Hospital Name required\" });\n      e.preventDefault();\n      return false;\n    }\n    if (!EmailValid || hospitalEmail.hospitalEmailget === \"\") {\n      setHospitalEmail({ hospitalEmailMsg: \"* Valid Email required\" });\n      e.preventDefault();\n      return false;\n    }\n    if (emailcheck === true) {\n      setHospitalEmail({\n        hospitalEmailMsg: \"* Email Is already registered.please login\",\n      });\n      e.preventDefault();\n      return false;\n    }\n    if (\n      hospitalEmail.hospitalEmailget !==\n        conformHospitalEmail.conformHospitalEmailGet ||\n      conformHospitalEmail.conformHospitalEmailGet === \"\" ||\n      !ConformEmailValid\n    ) {\n      setConformHospitalEmail({ conformHospitalEmailMsg: \"Email mismatch\" });\n      e.preventDefault();\n      return false;\n    }\n    if (!passwordValid || password.passwordGet === \"\") {\n      setpassword({\n        passwordMsg:\n          \"*Must be 8 character long, combination fo uper lower charachters\",\n      });\n      e.preventDefault();\n      return false;\n    } else {\n      history.push(\"/associations\", {\n        objectProp: hospitalEmail.hospitalEmailget,\n      });\n    }\n    collection.admin = nameInput.name;\n    collection.hospital = nameHospitalInput.hospitalname;\n    collection.email = hospitalEmail.hospitalEmailget;\n    collection.password = password.passwordGet;\n    collection.longitude = getlongitude;\n    collection.latitude = getlatitude;\n\n    var postApiUrl = \"http://192.168.1.110:3000/createhospital\"; //\"`http://192.168.1.110:3000/createhospital\"; //192.168.1.107\n    postApiCall(postApiUrl, collection);\n    // getApiCall(getUrl, collection);\n  };\n  return (\n    <div className=\"main_container\">\n      <div className=\"text_right\">\n        <MDBContainer>\n          <MDBRow>\n            <MDBCol md=\"8\">\n              <MDBCard>\n                <MDBCardBody>\n                  <form>\n                    <p className=\"h4 text-center py-4\">Sign up</p>\n                    <div className=\"grey-text\">\n                      <span style={{ color: \"red\", paddingLeft: 10 }}>\n                        {nameInput.errorMsg}\n                      </span>\n                      <MDBInput\n                        label=\"Admin name\"\n                        icon=\"user\"\n                        group\n                        type=\"text\"\n                        onInput={(text) => {\n                          setNameInput({ name: text.target.value });\n                        }}\n                        value={nameInput.name}\n                        validate\n                        error=\"wrong\"\n                        success=\"right\"\n                      />\n                      <span style={{ color: \"red\", paddingLeft: 10 }}>\n                        {nameHospitalInput.hospitalerrorMsg}\n                      </span>\n\n                      <MDBInput\n                        label=\"Hospital name\"\n                        icon=\"hospital\"\n                        group\n                        type=\"text\"\n                        validate\n                        error=\"wrong\"\n                        onInput={(text) => {\n                          setHospitalNameInput({\n                            hospitalname: text.target.value,\n                          });\n                        }}\n                        value={nameHospitalInput.hospitalname}\n                        success=\"right\"\n                      />\n                      <span style={{ color: \"red\", paddingLeft: 10 }}>\n                        {hospitalEmail.hospitalEmailMsg}\n                      </span>\n                      <MDBInput\n                        label=\"Hospital email\"\n                        icon=\"envelope\"\n                        group\n                        type=\"email\"\n                        validate\n                        onInput={(text) => {\n                          setHospitalEmail({\n                            hospitalEmailget: text.target.value,\n                          });\n                        }}\n                        value={hospitalEmail.hospitalEmailget}\n                        error=\"wrong\"\n                        success=\"right\"\n                      />\n                      <span style={{ color: \"red\", paddingLeft: 10 }}>\n                        {conformHospitalEmail.conformHospitalEmailMsg}\n                      </span>\n                      <MDBInput\n                        label=\"Confirm  email\"\n                        icon=\"exclamation-triangle\"\n                        group\n                        type=\"text\"\n                        onInput={(text) => {\n                          setConformHospitalEmail({\n                            conformHospitalEmailGet: text.target.value,\n                          });\n                        }}\n                        value={conformHospitalEmail.conformHospitalEmailGet}\n                        validate\n                        error=\"wrong\"\n                        success=\"right\"\n                      />\n                      <span style={{ color: \"red\", paddingLeft: 10 }}>\n                        {password.passwordMsg}\n                      </span>\n                      <MDBInput\n                        label=\"Your password\"\n                        icon=\"lock\"\n                        group\n                        type=\"password\"\n                        onInput={(text) => {\n                          setpassword({ passwordGet: text.target.value });\n                        }}\n                        value={password.passwordGet}\n                        validate\n                      />\n                    </div>\n                    <div className=\"text-center py-4 mt-3\">\n                      <MDBBtn color=\"cyan\" type=\"submit\" onClick={onSubmit}>\n                        Register\n                      </MDBBtn>\n                    </div>\n                    <div className=\"text-center text-center-extra\">\n                      <p style={{ paddingTop: 0 }}>Already registered?</p>\n                      <div>\n                        <a\n                          className=\"read-more-link\"\n                          onClick={() => {\n                            // setReadMore(!readMore);\n                            history.push(\"/login\");\n                          }}\n                        >\n                          <h6\n                            style={{\n                              fontWeight: \"bold\",\n                              paddingLeft: 5,\n                              color: \"rgba(250, 0, 0)\",\n                              cursor: \"pointer\",\n                            }}\n                          >\n                            Signin Here\n                          </h6>\n                        </a>\n                      </div>\n                    </div>\n                  </form>\n                </MDBCardBody>\n              </MDBCard>\n            </MDBCol>\n          </MDBRow>\n        </MDBContainer>\n      </div>\n    </div>\n  );\n};\n\nexport default FormPage;\n","/home/naeem/Documents/React_folder/react-task/src/components/loginForm.js",["128","129","130","131","132","133","134","135"],"import { React, useEffect, useState } from \"react\";\nimport { Route, useHistory } from \"react-router-dom\";\nimport \"./registration.css\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n} from \"mdbreact\";\n\nconst LoginPage = () => {\n  const history = useHistory();\n  const [getDetail, setDetail] = useState(false);\n  const [getData, setData] = useState();\n  const [emailcheck, setEmailcheck] = useState(false);\n  const [readMore, setReadMore] = useState(false);\n  const [hospitalEmail, setHospitalEmail] = useState({\n    hospitalEmailget: \"\",\n    hospitalEmailMsg: \"\",\n  });\n  const [password, setpassword] = useState({\n    passwordGet: \"\",\n    passwordMsg: \"\",\n  });\n\n  useEffect(async () => {\n    const response = await fetch(\"http://192.168.1.110:3000/allhospital\");\n    const json = await response.json();\n    console.log(\"data++++\", json);\n    setData(json);\n    console.log(\"getDaa\", json.length);\n  }, []);\n\n  const onSubmit = (e) => {\n    // e.preventDefault();\n    if (hospitalEmail.hospitalEmailget === \"\") {\n      setHospitalEmail({ hospitalEmailMsg: \"* Email required\" });\n      e.preventDefault();\n      return false;\n    }\n    if (emailcheck === true) {\n      setHospitalEmail({\n        hospitalEmailMsg: \"*Provided Email Is not registered.please Register\",\n      });\n      e.preventDefault();\n      return false;\n    }\n    if (password.passwordGet === \"\") {\n      setpassword({\n        passwordMsg: \"*please fill password\",\n      });\n      e.preventDefault();\n      return false;\n    }\n    console.log(\"+++++\", getDetail);\n    if (getDetail === true) {\n      console.log(\"+++++\", getDetail);\n    }\n    getData.map((value, index) => {\n      if (\n        value.email === hospitalEmail.hospitalEmailget &&\n        value.password === password.passwordGet\n      ) {\n        history.push(\"/associations\", {\n          objectProp: hospitalEmail.hospitalEmailget,\n        });\n        // <Route\n        //   exact\n        //   path=\"/associations\"\n        //   component={hospitalEmail.hospitalEmailget}\n        // />;\n      }\n      //   if (value.email !== hospitalEmail.hospitalEmailget) {\n      //     setEmailcheck(true);\n      //   }\n    });\n    // else {\n    //   history.push(\"/associations\");\n    // }\n  };\n\n  return (\n    <div className=\"main_container\">\n      <div className=\"text_right\">\n        <MDBContainer>\n          <MDBRow>\n            <MDBCol md=\"8\">\n              <MDBCard>\n                <MDBCardBody>\n                  <form>\n                    <p className=\"h4 text-center py-4\">Please Login Here</p>\n                    <div className=\"grey-text\">\n                      <span style={{ color: \"red\", paddingLeft: 10 }}>\n                        {hospitalEmail.hospitalEmailMsg}\n                      </span>\n                      <MDBInput\n                        label=\"Your hospital email\"\n                        icon=\"envelope\"\n                        group\n                        type=\"email\"\n                        onInput={(text) => {\n                          setHospitalEmail({\n                            hospitalEmailget: text.target.value,\n                          });\n                        }}\n                        value={hospitalEmail.hospitalEmailget}\n                        validate\n                        error=\"wrong\"\n                        success=\"right\"\n                      />\n\n                      <span style={{ color: \"red\", paddingLeft: 10 }}>\n                        {password.passwordMsg}\n                      </span>\n                      <MDBInput\n                        label=\"Your password\"\n                        icon=\"lock\"\n                        group\n                        type=\"password\"\n                        onInput={(text) => {\n                          setpassword({ passwordGet: text.target.value });\n                        }}\n                        value={password.passwordGet}\n                        validate\n                      />\n                    </div>\n                    <div className=\"text-center py-4 mt-3\">\n                      <MDBBtn color=\"cyan\" type=\"submit\" onClick={onSubmit}>\n                        log in\n                      </MDBBtn>\n                    </div>\n                    <div className=\"text-center text-center-extra\">\n                      <p style={{ paddingTop: 0 }}>Not registered Yet?</p>\n                      <div>\n                        <a\n                          className=\"read-more-link\"\n                          onClick={() => {\n                            // setReadMore(!readMore);\n                            history.push(\"/\");\n                          }}\n                        >\n                          <h6\n                            style={{\n                              fontWeight: \"bold\",\n                              paddingLeft: 5,\n                              color: \"rgba(250, 0, 0)\",\n                              cursor: \"pointer\",\n                            }}\n                          >\n                            Register Here\n                          </h6>\n                        </a>\n                      </div>\n                    </div>\n                  </form>\n                </MDBCardBody>\n              </MDBCard>\n            </MDBCol>\n          </MDBRow>\n        </MDBContainer>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n",{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":4,"column":8,"nodeType":"142","messageId":"143","endLine":4,"endColumn":17},{"ruleId":"140","severity":1,"message":"144","line":80,"column":7,"nodeType":"142","messageId":"143","endLine":80,"endColumn":14},{"ruleId":"140","severity":1,"message":"145","line":3,"column":8,"nodeType":"142","messageId":"143","endLine":3,"endColumn":18},{"ruleId":"140","severity":1,"message":"146","line":4,"column":16,"nodeType":"142","messageId":"143","endLine":4,"endColumn":25},{"ruleId":"140","severity":1,"message":"147","line":4,"column":27,"nodeType":"142","messageId":"143","endLine":4,"endColumn":40},{"ruleId":"140","severity":1,"message":"148","line":9,"column":8,"nodeType":"142","messageId":"143","endLine":9,"endColumn":18},{"ruleId":"149","severity":1,"message":"150","line":103,"column":42,"nodeType":"151","messageId":"152","endLine":103,"endColumn":44},{"ruleId":"149","severity":1,"message":"150","line":139,"column":47,"nodeType":"151","messageId":"152","endLine":139,"endColumn":49},{"ruleId":"140","severity":1,"message":"153","line":176,"column":9,"nodeType":"142","messageId":"143","endLine":176,"endColumn":16},{"ruleId":"140","severity":1,"message":"147","line":2,"column":27,"nodeType":"142","messageId":"143","endLine":2,"endColumn":40},{"ruleId":"140","severity":1,"message":"154","line":2,"column":42,"nodeType":"142","messageId":"143","endLine":2,"endColumn":48},{"ruleId":"140","severity":1,"message":"155","line":2,"column":10,"nodeType":"142","messageId":"143","endLine":2,"endColumn":14},{"ruleId":"140","severity":1,"message":"146","line":2,"column":16,"nodeType":"142","messageId":"143","endLine":2,"endColumn":25},{"ruleId":"140","severity":1,"message":"147","line":2,"column":27,"nodeType":"142","messageId":"143","endLine":2,"endColumn":40},{"ruleId":"140","severity":1,"message":"154","line":2,"column":42,"nodeType":"142","messageId":"143","endLine":2,"endColumn":48},{"ruleId":"140","severity":1,"message":"156","line":3,"column":28,"nodeType":"142","messageId":"143","endLine":3,"endColumn":37},{"ruleId":"140","severity":1,"message":"157","line":3,"column":39,"nodeType":"142","messageId":"143","endLine":3,"endColumn":47},{"ruleId":"140","severity":1,"message":"158","line":4,"column":8,"nodeType":"142","messageId":"143","endLine":4,"endColumn":13},{"ruleId":"140","severity":1,"message":"148","line":5,"column":10,"nodeType":"142","messageId":"143","endLine":5,"endColumn":20},{"ruleId":"159","severity":1,"message":"160","line":57,"column":5,"nodeType":"161","messageId":"162","endLine":59,"endColumn":6},{"ruleId":"140","severity":1,"message":"155","line":2,"column":10,"nodeType":"142","messageId":"143","endLine":2,"endColumn":14},{"ruleId":"140","severity":1,"message":"146","line":2,"column":16,"nodeType":"142","messageId":"143","endLine":2,"endColumn":25},{"ruleId":"140","severity":1,"message":"147","line":2,"column":27,"nodeType":"142","messageId":"143","endLine":2,"endColumn":40},{"ruleId":"140","severity":1,"message":"154","line":2,"column":42,"nodeType":"142","messageId":"143","endLine":2,"endColumn":48},{"ruleId":"140","severity":1,"message":"156","line":3,"column":28,"nodeType":"142","messageId":"143","endLine":3,"endColumn":37},{"ruleId":"140","severity":1,"message":"157","line":3,"column":39,"nodeType":"142","messageId":"143","endLine":3,"endColumn":47},{"ruleId":"140","severity":1,"message":"158","line":4,"column":8,"nodeType":"142","messageId":"143","endLine":4,"endColumn":13},{"ruleId":"140","severity":1,"message":"163","line":41,"column":11,"nodeType":"142","messageId":"143","endLine":41,"endColumn":23},{"ruleId":"149","severity":1,"message":"150","line":41,"column":52,"nodeType":"151","messageId":"152","endLine":41,"endColumn":54},{"ruleId":"149","severity":1,"message":"164","line":48,"column":42,"nodeType":"151","messageId":"165","endLine":48,"endColumn":44},{"ruleId":"159","severity":1,"message":"160","line":67,"column":5,"nodeType":"161","messageId":"162","endLine":69,"endColumn":6},{"ruleId":"140","severity":1,"message":"166","line":3,"column":8,"nodeType":"142","messageId":"143","endLine":3,"endColumn":19},{"ruleId":"140","severity":1,"message":"141","line":4,"column":8,"nodeType":"142","messageId":"143","endLine":4,"endColumn":17},{"ruleId":"140","severity":1,"message":"144","line":7,"column":7,"nodeType":"142","messageId":"143","endLine":7,"endColumn":14},{"ruleId":"140","severity":1,"message":"167","line":46,"column":7,"nodeType":"142","messageId":"143","endLine":46,"endColumn":15},{"ruleId":"140","severity":1,"message":"168","line":2,"column":16,"nodeType":"142","messageId":"143","endLine":2,"endColumn":21},{"ruleId":"140","severity":1,"message":"146","line":2,"column":23,"nodeType":"142","messageId":"143","endLine":2,"endColumn":32},{"ruleId":"140","severity":1,"message":"147","line":2,"column":34,"nodeType":"142","messageId":"143","endLine":2,"endColumn":47},{"ruleId":"140","severity":1,"message":"154","line":2,"column":49,"nodeType":"142","messageId":"143","endLine":2,"endColumn":55},{"ruleId":"140","severity":1,"message":"146","line":2,"column":16,"nodeType":"142","messageId":"143","endLine":2,"endColumn":25},{"ruleId":"140","severity":1,"message":"147","line":2,"column":27,"nodeType":"142","messageId":"143","endLine":2,"endColumn":40},{"ruleId":"140","severity":1,"message":"154","line":2,"column":42,"nodeType":"142","messageId":"143","endLine":2,"endColumn":48},{"ruleId":"140","severity":1,"message":"146","line":2,"column":16,"nodeType":"142","messageId":"143","endLine":2,"endColumn":25},{"ruleId":"140","severity":1,"message":"147","line":2,"column":27,"nodeType":"142","messageId":"143","endLine":2,"endColumn":40},{"ruleId":"140","severity":1,"message":"154","line":2,"column":42,"nodeType":"142","messageId":"143","endLine":2,"endColumn":48},{"ruleId":"140","severity":1,"message":"169","line":1,"column":10,"nodeType":"142","messageId":"143","endLine":1,"endColumn":16},{"ruleId":"170","severity":1,"message":"171","line":17,"column":28,"nodeType":"172","endLine":17,"endColumn":89},{"ruleId":"140","severity":1,"message":"173","line":1,"column":38,"nodeType":"142","messageId":"143","endLine":1,"endColumn":48},{"ruleId":"140","severity":1,"message":"174","line":2,"column":8,"nodeType":"142","messageId":"143","endLine":2,"endColumn":22},{"ruleId":"140","severity":1,"message":"175","line":15,"column":10,"nodeType":"142","messageId":"143","endLine":15,"endColumn":30},{"ruleId":"140","severity":1,"message":"176","line":22,"column":10,"nodeType":"142","messageId":"143","endLine":22,"endColumn":18},{"ruleId":"140","severity":1,"message":"177","line":22,"column":20,"nodeType":"142","messageId":"143","endLine":22,"endColumn":31},{"ruleId":"178","severity":1,"message":"179","line":60,"column":13,"nodeType":"151","endLine":67,"endColumn":4},{"ruleId":"178","severity":1,"message":"180","line":67,"column":6,"nodeType":"181","endLine":67,"endColumn":8,"suggestions":"182"},{"ruleId":"140","severity":1,"message":"153","line":70,"column":9,"nodeType":"142","messageId":"143","endLine":70,"endColumn":16},{"ruleId":"149","severity":1,"message":"183","line":81,"column":36,"nodeType":"151","messageId":"152","endLine":81,"endColumn":38},{"ruleId":"170","severity":1,"message":"184","line":263,"column":25,"nodeType":"172","endLine":269,"endColumn":26},{"ruleId":"140","severity":1,"message":"185","line":2,"column":10,"nodeType":"142","messageId":"143","endLine":2,"endColumn":15},{"ruleId":"140","severity":1,"message":"186","line":16,"column":21,"nodeType":"142","messageId":"143","endLine":16,"endColumn":30},{"ruleId":"140","severity":1,"message":"187","line":18,"column":22,"nodeType":"142","messageId":"143","endLine":18,"endColumn":35},{"ruleId":"140","severity":1,"message":"176","line":19,"column":10,"nodeType":"142","messageId":"143","endLine":19,"endColumn":18},{"ruleId":"140","severity":1,"message":"177","line":19,"column":20,"nodeType":"142","messageId":"143","endLine":19,"endColumn":31},{"ruleId":"178","severity":1,"message":"179","line":29,"column":13,"nodeType":"151","endLine":35,"endColumn":4},{"ruleId":"149","severity":1,"message":"183","line":62,"column":32,"nodeType":"151","messageId":"152","endLine":62,"endColumn":34},{"ruleId":"170","severity":1,"message":"184","line":138,"column":25,"nodeType":"172","endLine":144,"endColumn":26},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"no-unused-vars","'FinalData' is defined but never used.","Identifier","unusedVar","'Heading' is assigned a value but never used.","'ScrollArea' is defined but never used.","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'Pagination' is defined but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'headers' is assigned a value but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'axios' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'hospitalFind' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'PendingData' is defined but never used.","'onUpdate' is assigned a value but never used.","'Title' is defined but never used.","'render' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Dimensions' is defined but never used.","'ComponentsData' is defined but never used.","'isCompositeComponent' is defined but never used.","'readMore' is assigned a value but never used.","'setReadMore' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has a missing dependency: 'getDetails'. Either include it or remove the dependency array.","ArrayExpression",["190"],"Array.prototype.map() expects a return value from arrow function.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Route' is defined but never used.","'setDetail' is assigned a value but never used.","'setEmailcheck' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"191","fix":"192"},"Update the dependencies array to be: [getDetails]",{"range":"193","text":"194"},[2150,2152],"[getDetails]"]