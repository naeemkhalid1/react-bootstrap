[{"/home/naeem/Documents/React_folder/FYP_IQBAL/react-task/src/index.js":"1","/home/naeem/Documents/React_folder/FYP_IQBAL/react-task/src/App.js":"2","/home/naeem/Documents/React_folder/FYP_IQBAL/react-task/src/reportWebVitals.js":"3","/home/naeem/Documents/React_folder/FYP_IQBAL/react-task/src/components/loginForm.js":"4","/home/naeem/Documents/React_folder/FYP_IQBAL/react-task/src/CompnentsData.js":"5","/home/naeem/Documents/React_folder/FYP_IQBAL/react-task/src/components/registration.js":"6","/home/naeem/Documents/React_folder/FYP_IQBAL/react-task/src/dbTable.js":"7","/home/naeem/Documents/React_folder/FYP_IQBAL/react-task/src/PendendData.js":"8","/home/naeem/Documents/React_folder/FYP_IQBAL/react-task/src/FinalData.js":"9","/home/naeem/Documents/React_folder/FYP_IQBAL/react-task/src/usersTableData.js":"10","/home/naeem/Documents/React_folder/FYP_IQBAL/react-task/src/IntialData.js":"11","/home/naeem/Documents/React_folder/FYP_IQBAL/react-task/src/Headings/intialHeading.js":"12","/home/naeem/Documents/React_folder/FYP_IQBAL/react-task/src/Headings/pendingHeading.js":"13","/home/naeem/Documents/React_folder/FYP_IQBAL/react-task/src/Headings/finalHeading.js":"14"},{"size":643,"mtime":1621352553752,"results":"15","hashOfConfig":"16"},{"size":1532,"mtime":1621352553752,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1612344156106,"results":"18","hashOfConfig":"16"},{"size":5328,"mtime":1622173665745,"results":"19","hashOfConfig":"16"},{"size":12180,"mtime":1622888300760,"results":"20","hashOfConfig":"16"},{"size":10661,"mtime":1622273081561,"results":"21","hashOfConfig":"16"},{"size":2583,"mtime":1622178007520,"results":"22","hashOfConfig":"16"},{"size":2788,"mtime":1621352553752,"results":"23","hashOfConfig":"16"},{"size":1373,"mtime":1621352553752,"results":"24","hashOfConfig":"16"},{"size":3135,"mtime":1622525761940,"results":"25","hashOfConfig":"16"},{"size":2312,"mtime":1622274714204,"results":"26","hashOfConfig":"16"},{"size":547,"mtime":1621352553752,"results":"27","hashOfConfig":"16"},{"size":594,"mtime":1621352553752,"results":"28","hashOfConfig":"16"},{"size":517,"mtime":1621749094724,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"17eywdc",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"32"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"32"},"/home/naeem/Documents/React_folder/FYP_IQBAL/react-task/src/index.js",[],["69","70"],"/home/naeem/Documents/React_folder/FYP_IQBAL/react-task/src/App.js",[],"/home/naeem/Documents/React_folder/FYP_IQBAL/react-task/src/reportWebVitals.js",[],"/home/naeem/Documents/React_folder/FYP_IQBAL/react-task/src/components/loginForm.js",["71","72","73","74"],"import { React, useEffect, useState } from \"react\";\nimport { Route, useHistory } from \"react-router-dom\";\nimport \"./registration.css\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n} from \"mdbreact\";\n\nconst LoginPage = () => {\n  const history = useHistory();\n  const [getDetail] = useState(false);\n  const [getData, setData] = useState();\n  const [emailcheck] = useState(false);\n\n  const [hospitalEmail, setHospitalEmail] = useState({\n    hospitalEmailget: \"\",\n    hospitalEmailMsg: \"\",\n  });\n  const [password, setpassword] = useState({\n    passwordGet: \"\",\n    passwordMsg: \"\",\n  });\n\n  useEffect(async () => {\n    const response = await fetch(\"http://127.0.0.1:3000/allhospital\");\n    const json = await response.json();\n    console.log(\"data++++\", json);\n    setData(json);\n    console.log(\"getDaa\", json.length);\n  }, []);\n\n  const onSubmit = (e) => {\n    // e.preventDefault();\n    if (hospitalEmail.hospitalEmailget === \"\") {\n      setHospitalEmail({ hospitalEmailMsg: \"* Email required\" });\n      e.preventDefault();\n      return false;\n    }\n    if (emailcheck === true) {\n      setHospitalEmail({\n        hospitalEmailMsg: \"*Provided Email Is not registered.please Register\",\n      });\n      e.preventDefault();\n      return false;\n    }\n    if (password.passwordGet === \"\") {\n      setpassword({\n        passwordMsg: \"*please fill password\",\n      });\n      e.preventDefault();\n      return false;\n    }\n    console.log(\"+++++\", getDetail);\n    if (getDetail === true) {\n      console.log(\"+++++\", getDetail);\n    }\n    getData.map((value, index) => {\n      if (\n        value.email === hospitalEmail.hospitalEmailget &&\n        value.password === password.passwordGet\n      ) {\n        history.push(\"/associations\", {\n          objectProp: hospitalEmail.hospitalEmailget,\n          hospitalName: value.hospital,\n        });\n        // <Route\n        //   exact\n        //   path=\"/associations\"\n        //   component={hospitalEmail.hospitalEmailget}\n        // />;\n      }\n      //   if (value.email !== hospitalEmail.hospitalEmailget) {\n      //     setEmailcheck(true);\n      //   }\n    });\n    // else {\n    //   history.push(\"/associations\");\n    // }\n  };\n\n  return (\n    <div className=\"main_container\">\n      <div className=\"text_right\">\n        <MDBContainer>\n          <MDBRow>\n            <MDBCol md=\"8\">\n              <MDBCard>\n                <MDBCardBody>\n                  <form>\n                    <p className=\"h4 text-center py-4\">Please Login Here</p>\n                    <div className=\"grey-text\">\n                      <span style={{ color: \"red\", paddingLeft: 10 }}>\n                        {hospitalEmail.hospitalEmailMsg}\n                      </span>\n                      <MDBInput\n                        label=\"Your hospital email\"\n                        icon=\"envelope\"\n                        group\n                        type=\"email\"\n                        onInput={(text) => {\n                          setHospitalEmail({\n                            hospitalEmailget: text.target.value,\n                          });\n                        }}\n                        value={hospitalEmail.hospitalEmailget}\n                        validate\n                        error=\"wrong\"\n                        success=\"right\"\n                      />\n\n                      <span style={{ color: \"red\", paddingLeft: 10 }}>\n                        {password.passwordMsg}\n                      </span>\n                      <MDBInput\n                        label=\"Your password\"\n                        icon=\"lock\"\n                        group\n                        type=\"password\"\n                        onInput={(text) => {\n                          setpassword({ passwordGet: text.target.value });\n                        }}\n                        value={password.passwordGet}\n                        validate\n                      />\n                    </div>\n                    <div className=\"text-center py-4 mt-3\">\n                      <MDBBtn color=\"cyan\" type=\"submit\" onClick={onSubmit}>\n                        log in\n                      </MDBBtn>\n                    </div>\n                    <div className=\"text-center text-center-extra\">\n                      <p style={{ paddingTop: 0 }}>Not registered Yet?</p>\n                      <div>\n                        <a\n                          className=\"read-more-link\"\n                          onClick={() => {\n                            // setReadMore(!readMore);\n                            history.push(\"/\");\n                          }}\n                        >\n                          <h6\n                            style={{\n                              fontWeight: \"bold\",\n                              paddingLeft: 5,\n                              color: \"rgba(250, 0, 0)\",\n                              cursor: \"pointer\",\n                            }}\n                          >\n                            Register Here\n                          </h6>\n                        </a>\n                      </div>\n                    </div>\n                  </form>\n                </MDBCardBody>\n              </MDBCard>\n            </MDBCol>\n          </MDBRow>\n        </MDBContainer>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","/home/naeem/Documents/React_folder/FYP_IQBAL/react-task/src/CompnentsData.js",["75","76","77","78","79","80"],"/home/naeem/Documents/React_folder/FYP_IQBAL/react-task/src/components/registration.js",["81","82","83","84","85","86","87","88","89","90"],"import { React, useEffect, useState, Dimensions } from \"react\";\nimport ComponentsData from \"../CompnentsData\";\nimport axios from \"axios\";\nimport \"./registration.css\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n} from \"mdbreact\";\nimport { isCompositeComponent } from \"react-dom/test-utils\";\nconst FormPage = () => {\n  const history = useHistory();\n  const [getDetail, setDetail] = useState();\n  const [emailcheck, setEmailcheck] = useState(false);\n  const [getlatitude, setlatitude] = useState();\n  const [getlongitude, setlongitude] = useState();\n  const [readMore, setReadMore] = useState(false);\n  const [nameInput, setNameInput] = useState({\n    name: \"\",\n    errorMsg: \"\",\n  });\n  const [nameHospitalInput, setHospitalNameInput] = useState({\n    hospitalname: \"\",\n    hospitalerrorMsg: \"\",\n  });\n  const [hospitalEmail, setHospitalEmail] = useState({\n    hospitalEmailget: \"\",\n    hospitalEmailMsg: \"\",\n  });\n  const [conformHospitalEmail, setConformHospitalEmail] = useState({\n    conformHospitalEmailGet: \"\",\n    conformHospitalEmailMsg: \"\",\n  });\n  const [password, setpassword] = useState({\n    passwordGet: \"\",\n    passwordMsg: \"\",\n  });\n  const locationFinder = async () => {\n    navigator.geolocation.getCurrentPosition(\n      function (position) {\n        var lat = parseFloat(position.coords.latitude);\n        var lng = parseFloat(position.coords.longitude);\n        // console.log(\"location fo user latitude++\", lat);\n        // console.log(\"location fo user logitude\", lng);\n        setlatitude(lat);\n        setlongitude(lng);\n      },\n      function (error) {\n        console.error(\"Error Code = \" + error.code + \" - \" + error.message);\n      }\n    );\n  };\n  console.log(\"longi___\", getlatitude);\n  console.log(\"latitude----\", getlongitude);\n  useEffect(async () => {\n    locationFinder();\n    const response = await fetch(\"http://192.168.2.71:3000/allhospital\");\n    const json = await response.json();\n    console.log(\"data++++\", json.length);\n    setDetail(json);\n    getDetails();\n  }, []);\n  const postApiCall = async (url, data) => {\n    console.log(\"postqueue data: \", data);\n    let headers = { \"content-type\": \"application/json\" };\n    let response = await axios({\n      method: \"POST\",\n      url,\n      data: JSON.stringify(data),\n      headers: { \"content-type\": \"application/json\" },\n    });\n    console.log(\"queue response put= \", response);\n  };\n  const getDetails = async () => {\n    if (getDetail !== undefined) {\n      getDetail.map((value, index) => {\n        if (value.email === hospitalEmail.hospitalEmailget) {\n          setEmailcheck(true);\n        }\n      });\n    }\n  };\n\n  const onSubmit = (e) => {\n    let collection = {};\n    let namecheck = /^[a-zA-Z0-9_ ]*$/;\n    let emailvalidaton =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    let passwordRgx =\n      /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/;\n    let isValid = namecheck.test(nameInput.name);\n    let isnamevalid = namecheck.test(nameHospitalInput.hospitalname);\n    let EmailValid = emailvalidaton.test(hospitalEmail.hospitalEmailget);\n    let ConformEmailValid = emailvalidaton.test(\n      conformHospitalEmail.conformHospitalEmailGet\n    );\n\n    let passwordValid = passwordRgx.test(password.passwordGet);\n\n    if (isValid === false || nameInput.name === \"\") {\n      setNameInput({ errorMsg: \"* Name required\" });\n      e.preventDefault();\n      return false;\n    }\n    if (!isnamevalid || nameHospitalInput.hospitalname === \"\") {\n      setHospitalNameInput({ hospitalerrorMsg: \"* Hospital Name required\" });\n      e.preventDefault();\n      return false;\n    }\n    if (!EmailValid || hospitalEmail.hospitalEmailget === \"\") {\n      setHospitalEmail({ hospitalEmailMsg: \"* Valid Email required\" });\n      e.preventDefault();\n      return false;\n    }\n    if (emailcheck === true) {\n      setHospitalEmail({\n        hospitalEmailMsg: \"* Email Is already registered.please login\",\n      });\n      e.preventDefault();\n      return false;\n    }\n    if (\n      hospitalEmail.hospitalEmailget !==\n        conformHospitalEmail.conformHospitalEmailGet ||\n      conformHospitalEmail.conformHospitalEmailGet === \"\" ||\n      !ConformEmailValid\n    ) {\n      setConformHospitalEmail({ conformHospitalEmailMsg: \"Email mismatch\" });\n      e.preventDefault();\n      return false;\n    }\n    if (!passwordValid || password.passwordGet === \"\") {\n      setpassword({\n        passwordMsg:\n          \"*Must be 8 character long, combination fo uper lower charachters\",\n      });\n      e.preventDefault();\n      return false;\n    } else {\n      history.push(\"/associations\", {\n        objectProp: hospitalEmail.hospitalEmailget,\n      });\n    }\n    collection.admin = nameInput.name;\n    collection.hospital = nameHospitalInput.hospitalname;\n    collection.email = hospitalEmail.hospitalEmailget;\n    collection.password = password.passwordGet;\n    collection.longitude = getlongitude;\n    collection.latitude = getlatitude;\n\n    var postApiUrl = \"http://192.168.2.71:3000/createhospital\"; //\"`http://192.168.1.110:3000/createhospital\"; //192.168.1.107\n    postApiCall(postApiUrl, collection);\n    // getApiCall(getUrl, collection);\n  };\n  return (\n    <div className=\"main_container\">\n      <div className=\"text_right\">\n        <MDBContainer>\n          <MDBRow>\n            <MDBCol md=\"8\">\n              <MDBCard>\n                <MDBCardBody>\n                  <form>\n                    <p className=\"h4 text-center py-4\">Sign up</p>\n                    <div className=\"grey-text\">\n                      <span style={{ color: \"red\", paddingLeft: 10 }}>\n                        {nameInput.errorMsg}\n                      </span>\n                      <MDBInput\n                        label=\"Admin name\"\n                        icon=\"user\"\n                        group\n                        type=\"text\"\n                        onInput={(text) => {\n                          setNameInput({ name: text.target.value });\n                        }}\n                        value={nameInput.name}\n                        validate\n                        error=\"wrong\"\n                        success=\"right\"\n                      />\n                      <span style={{ color: \"red\", paddingLeft: 10 }}>\n                        {nameHospitalInput.hospitalerrorMsg}\n                      </span>\n\n                      <MDBInput\n                        label=\"Hospital name\"\n                        icon=\"hospital\"\n                        group\n                        type=\"text\"\n                        validate\n                        error=\"wrong\"\n                        onInput={(text) => {\n                          setHospitalNameInput({\n                            hospitalname: text.target.value,\n                          });\n                        }}\n                        value={nameHospitalInput.hospitalname}\n                        success=\"right\"\n                      />\n                      <span style={{ color: \"red\", paddingLeft: 10 }}>\n                        {hospitalEmail.hospitalEmailMsg}\n                      </span>\n                      <MDBInput\n                        label=\"Hospital email\"\n                        icon=\"envelope\"\n                        group\n                        type=\"email\"\n                        validate\n                        onInput={(text) => {\n                          setHospitalEmail({\n                            hospitalEmailget: text.target.value,\n                          });\n                        }}\n                        value={hospitalEmail.hospitalEmailget}\n                        error=\"wrong\"\n                        success=\"right\"\n                      />\n                      <span style={{ color: \"red\", paddingLeft: 10 }}>\n                        {conformHospitalEmail.conformHospitalEmailMsg}\n                      </span>\n                      <MDBInput\n                        label=\"Confirm  email\"\n                        icon=\"exclamation-triangle\"\n                        group\n                        type=\"text\"\n                        onInput={(text) => {\n                          setConformHospitalEmail({\n                            conformHospitalEmailGet: text.target.value,\n                          });\n                        }}\n                        value={conformHospitalEmail.conformHospitalEmailGet}\n                        validate\n                        error=\"wrong\"\n                        success=\"right\"\n                      />\n                      <span style={{ color: \"red\", paddingLeft: 10 }}>\n                        {password.passwordMsg}\n                      </span>\n                      <MDBInput\n                        label=\"Your password\"\n                        icon=\"lock\"\n                        group\n                        type=\"password\"\n                        onInput={(text) => {\n                          setpassword({ passwordGet: text.target.value });\n                        }}\n                        value={password.passwordGet}\n                        validate\n                      />\n                    </div>\n                    <div className=\"text-center py-4 mt-3\">\n                      <MDBBtn color=\"cyan\" type=\"submit\" onClick={onSubmit}>\n                        Register\n                      </MDBBtn>\n                    </div>\n                    <div className=\"text-center text-center-extra\">\n                      <p style={{ paddingTop: 0 }}>Already registered?</p>\n                      <div>\n                        <a\n                          className=\"read-more-link\"\n                          onClick={() => {\n                            // setReadMore(!readMore);\n                            history.push(\"/login\");\n                          }}\n                        >\n                          <h6\n                            style={{\n                              fontWeight: \"bold\",\n                              paddingLeft: 5,\n                              color: \"rgba(250, 0, 0)\",\n                              cursor: \"pointer\",\n                            }}\n                          >\n                            Signin Here\n                          </h6>\n                        </a>\n                      </div>\n                    </div>\n                  </form>\n                </MDBCardBody>\n              </MDBCard>\n            </MDBCol>\n          </MDBRow>\n        </MDBContainer>\n      </div>\n    </div>\n  );\n};\n\nexport default FormPage;\n","/home/naeem/Documents/React_folder/FYP_IQBAL/react-task/src/dbTable.js",["91","92","93","94","95","96","97","98"],"// import React, { Component } from \"react\";\nimport { Card, ListGroup, ListGroupItem, Button } from \"react-bootstrap\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Pagination } from \"antd\";\nimport \"./ComponentsData.css\";\nimport { CSVLink } from \"react-csv\";\n\n// import {\n//   Image,\n//   StyleSheet,\n//   Text,\n//   View,\n//   TouchableOpacity,\n//   FlatList,<div className=\"componentsInner\">\n//   Button,\n//   SafeAreaView,\n// } from \"react-native\";\n// import logo from \"./assets/boy.png\";\n// import { useFonts, Inter_900Black } from \"@expo-google-fonts/inter\";\n// import { log } from \"react-native-reanimated\";\n\nclass TableData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      item: [],\n      headers: [\n        { label: \"ID\", key: \"id\" },\n        { label: \"Name\", key: \"name\" },\n        { label: \"Disease\", key: \"disease\" },\n        { label: \"Phone#\", key: \"phone\" },\n        { label: \"Age\", key: \"age\" },\n        { label: \"Gender\", key: \"gender\" },\n      ],\n    };\n  }\n  //   ShowData = async () => {\n  //     const result = await axios(\"http://localhost:3000/detail\");\n  //     console.log(\"result\", result);\n  //     const temp = result.data;\n  //     return this.setState({ item: temp });\n  //   };\n  async componentDidMount() {\n    const response = await fetch(`http://127.0.0.1:3000/detail`);\n    const json = await response.json();\n    this.setState({ item: json });\n  }\n  displayData() {\n    return this.state.item.map((item, i) => {\n      return (\n        <tr key={item.id}>\n          <td>{item.id}</td>\n          <td>{item.name}</td>\n          <td>{item.disease}</td>\n          <td>{item.phone}</td>\n          <td>{item.age}</td>\n          <td>{item.gender}</td>\n        </tr>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"csvHolder\">\n        <div className=\"tableHolder\">\n          <h1 id=\"title\">Users Table</h1>\n          <table id=\"users\">\n            <thead>\n              <tr>\n                <th>Id</th>\n                <th>Name</th>\n                <th>Disease</th>\n                <th>phone#</th>\n                <th>age</th>\n                <th>Gender</th>\n              </tr>\n            </thead>\n            <tbody id=\"tbody\">{this.displayData()}</tbody>\n          </table>\n        </div>\n        <CSVLink data={this.state.item} headers={this.state.headers}>\n          <div className=\"downloadData\">\n            <div className=\"Csv\"> Download Data</div>\n          </div>\n        </CSVLink>\n      </div>\n    );\n  }\n}\n\nexport default TableData;\n","/home/naeem/Documents/React_folder/FYP_IQBAL/react-task/src/PendendData.js",["99","100"],"import React, { Component } from \"react\";\nimport { Card, ListGroup, ListGroupItem, Button } from \"react-bootstrap\";\nimport \"./intialData.css\";\nimport FinalData from \"./FinalData\";\n\nclass PendingData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      item: this.props,\n      showState: \"\",\n    };\n    // this.showCompleteData = this.showCompleteData.bind(this);\n  }\n  // dataHolder(){\n  //     const tempvar=this.props.PendingData;\n  //     console.log(\"tempcar\",tempvar);\n  // }\n  //   showCompleteData(clickedId) {\n  //     this.state.item.filter((filterItems) => {\n  //       if (filterItems.id === clickedId) {\n  //         // temparray.push({id:filterItems.id, img:filterItems.img, userName:filterItems.userName,},);\n  //         this.setState({\n  //           showState: [\n  //             ...this.state.showState,\n  //             {\n  //               id: filterItems.id,\n  //               img: filterItems.img,\n  //               userName: filterItems.userName,\n  //             },\n  //           ],\n  //         });\n  //       }\n  //     });\n  //     const currentIt = this.state.item.filter(\n  //       (filterItems) => filterItems.id !== clickedId\n  //     );\n  //     this.setState({ item: currentIt });\n  //   }\n\n  render() {\n    const { identityitem, img, name, showCompleteData, priority } = this.props;\n    // console.log(\"pending Data\", this.props);\n    return (\n      <div className=\"intial_data\" key={identityitem}>\n        <Card\n          style={{ width: \"18rem\", height: \"10rem\" }}\n          className=\"mainCard extraClass\"\n          key={identityitem}\n        >\n          {/* <Card.Img\n            style={{ width: \"50%\", height: \"50%\", margin: \"0 auto\" }}\n            variant=\"top\"\n            src={img}\n          /> */}\n\n          <Card.Body>\n            <Card.Title>{name}</Card.Title>\n            <Card.Text>\n              {identityitem} | {priority} |\n              <span style={{ color: \"green\", fontSize: \"15px\" }}>({img})</span>\n            </Card.Text>\n          </Card.Body>\n          <ListGroup className=\"list-group-flush\">\n            <ListGroupItem>\n              {\" \"}\n              <Button\n                onClick={() => showCompleteData(identityitem)}\n                style={{ background: \"gray\" }}\n              >\n                Mark Complete\n              </Button>\n            </ListGroupItem>\n          </ListGroup>\n        </Card>\n      </div>\n    );\n  }\n}\nconst Heading = () => {\n  return (\n    <div className=\"intialDataHeading\">\n      <Card\n        style={{ width: \"18rem\", padding: \"10px 0 0 0\" }}\n        className=\"mainCard\"\n      >\n        <Card.Title>\n          <span className=\"headings\"> TASKS IN PROCESSING</span>\n        </Card.Title>\n      </Card>\n    </div>\n  );\n};\n\nexport default PendingData;\n","/home/naeem/Documents/React_folder/FYP_IQBAL/react-task/src/FinalData.js",["101","102"],"import React, { Component } from \"react\";\nimport { Card, ListGroup, ListGroupItem, Button } from \"react-bootstrap\";\nimport \"./intialData.css\";\n\nclass FinalData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      item: [{ id: 1 }, { id: 2 }, { id: 3 }],\n    };\n  }\n\n  render() {\n    // const renderdata = (tasks) => {\n    const { identityitem, img, name, priority } = this.props;\n    return (\n      <div className=\"intial_data\">\n        <Card\n          style={{ width: \"18rem\", height: \"10rem\" }}\n          className=\"main_Card extraClass\"\n          key={identityitem}\n        >\n          <Card.Body style={{ background: \"white\" }}>\n            <Card.Title style={{ background: \"white\", border: \"5px\" }}>\n              {name}\n            </Card.Title>\n            <Card.Text className=\"paragraphClass\">\n              {identityitem} | {priority} |\n              <span style={{ color: \"green\", fontSize: \"15px\" }}>\n                Visit({img})\n              </span>\n            </Card.Text>\n          </Card.Body>\n          <ListGroup className=\"list-group-flush\">\n            {/* <ListGroupItem>Final Data will be here</ListGroupItem>  */}\n          </ListGroup>\n        </Card>\n      </div>\n    );\n    // };\n\n    // return (\n\n    //     {/* <Heading/> */}\n    //     {this.props.map(renderdata)}\n\n    // );\n  }\n}\n\nexport default FinalData;\n","/home/naeem/Documents/React_folder/FYP_IQBAL/react-task/src/usersTableData.js",["103","104","105","106","107","108","109","110","111","112","113"],"// import React, { Component } from \"react\";\nimport { CSVLink } from \"react-csv\";\nimport { Card, ListGroup, ListGroupItem, Button } from \"react-bootstrap\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./ComponentsData.css\";\n\n// import {\n//   Image,\n//   StyleSheet,\n//   Text,\n//   View,\n//   TouchableOpacity,\n//   FlatList,<div className=\"componentsInner\">\n//   Button,\n//   SafeAreaView,\n// } from \"react-native\";\n// import logo from \"./assets/boy.png\";\n// import { useFonts, Inter_900Black } from \"@expo-google-fonts/inter\";\n// import { log } from \"react-native-reanimated\";\n\nclass UsersData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      item: [],\n      headers: [\n        { label: \"ID\", key: \"id\" },\n        { label: \"Hospital\", key: \"hospital\" },\n        { label: \"State\", key: \"queueState\" },\n        { label: \"Notes\", key: \"notes\" },\n        { label: \"Priority\", key: \"priority\" },\n        { label: \"User\", key: \"user\" },\n      ],\n      hospitalName: \"\",\n    };\n  }\n  //   ShowData = async () => {\n  //     const result = await axios(\"http://localhost:3000/detail\");\n  //     console.log(\"result\", result);\n  //     const temp = result.data;\n  //     return this.setState({ item: temp });\n  //   };\n  async componentDidMount() {\n    const response = await fetch(`http://192.168.2.71:3000/queues`);\n    const json = await response.json();\n    this.setState({ item: json });\n    const responseemail = await fetch(\"http://192.168.2.71:3000/allhospital\");\n    const jsonemail = await responseemail.json();\n    const hospitalFind = jsonemail.filter((filter) => {\n      if (filter.email === this.props.adminEmail) {\n        this.setState({ hospitalName: filter.hospital });\n      }\n    });\n  }\n  displayData() {\n    return this.state.item.map((item, i) => {\n      if (item.hospital === this.state.hospitalName) {\n        return (\n          <tr key={i}>\n            <td>{item.id}</td>\n            <td>{item.hospital}</td>\n            <td>{item.queueState}</td>\n            <td>{item.notes}</td>\n            <td>{item.priority}</td>\n            <td>{item.user}</td>\n          </tr>\n        );\n      }\n    });\n  }\n\n  render() {\n    console.log(\"kkkkkkkk\", this.state.hospitalName);\n    // const { identityitem, img, name } = this.state;\n    {\n      // console.log(\"datadisplayed\", this.state.item);\n    }\n    return (\n      <div>\n        <div className=\"tableHolder\">\n          <h1 id=\"title\">Queue Users</h1>\n          <table id=\"users\">\n            <thead>\n              <tr>\n                <th>Id</th>\n                <th>Hospital</th>\n                <th>State</th>\n                <th>Notes</th>\n                <th>priority</th>\n                <th>User</th>\n              </tr>\n            </thead>\n            <tbody>{this.displayData()}</tbody>\n          </table>\n        </div>\n        <CSVLink data={this.state.item} headers={this.state.headers}>\n          <div className=\"downloadData\">\n            <div className=\"Csv\"> Download Data</div>\n          </div>\n        </CSVLink>\n      </div>\n    );\n  }\n}\n\nexport default UsersData;\n","/home/naeem/Documents/React_folder/FYP_IQBAL/react-task/src/IntialData.js",["114","115","116","117","118"],"import React, { Component } from \"react\";\nimport { Card, ListGroup, ListGroupItem, Button } from \"react-bootstrap\";\nimport PendingData from \"./PendendData\";\nimport FinalData from \"./FinalData\";\nimport \"./intialData.css\";\n\nconst Heading = () => {\n  return (\n    <Card\n      style={{ width: \"18rem\", padding: \"10px 0 0 0\" }}\n      className=\"mainCard intialDataHeading\"\n    >\n      <Card.Title>\n        <span className=\"headings\"> USER REQUESTS</span>\n      </Card.Title>\n    </Card>\n  );\n};\n\nclass IntialData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { newid: this.props.identity, seconid: \"\" };\n    // this.hide=this.hide.bind(this);\n  }\n  // hide(){\n\n  //     this.setState({\n  //         showData:this.state.id,\n  //     })\n\n  // }\n  settngstate() {\n    //  this.setState ({seconid:this.state.newid});\n  }\n\n  render() {\n    const {\n      identity,\n      hospital,\n      img,\n      name,\n      hide,\n      showData,\n      priority,\n      pushToken,\n      onUpdate,\n    } = this.props;\n\n    return (\n      <div className=\"intial_data\" key={identity}>\n        {/* <Heading/> */}\n        <Card\n          style={{ width: \"18rem\", height: \"10rem\" }}\n          className=\"mainCard extraClass\"\n          key={identity}\n        >\n          {/* <Card.Img style={{width:'50%',height:'50%',margin:'0 auto'}} variant=\"top\" src={img} /> */}\n\n          <Card.Body>\n            <Card.Title>{name}</Card.Title>\n            <Card.Text>\n              {identity} | {priority} | {hospital}\n              <span style={{ color: \"green\", fontSize: \"15px\" }}>({img})</span>\n            </Card.Text>\n          </Card.Body>\n          <ListGroup className=\"list-group-flush\">\n            <ListGroupItem>\n              <div className=\"itemss\">\n                <Button\n                  onClick={() => {\n                    showData(identity);\n                    // onUpdate();\n                  }}\n                >\n                  Process\n                </Button>\n                <Button\n                  onClick={() => hide(identity)}\n                  style={{ background: \"red\" }}\n                >\n                  DECLINE\n                </Button>\n              </div>\n            </ListGroupItem>\n          </ListGroup>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default IntialData;\n","/home/naeem/Documents/React_folder/FYP_IQBAL/react-task/src/Headings/intialHeading.js",["119","120","121","122"],"import React from \"react\";\nimport { Card, Title, ListGroup, ListGroupItem, Button } from \"react-bootstrap\";\nconst Heading = ({ data }) => {\n  console.log(\"this\", data);\n  return (\n    <div className=\"intialDataHeading\">\n      <Card\n        style={{ width: \"18rem\", padding: \"10px 0 0 0\" }}\n        className=\"mainCard\"\n      >\n        <Card.Title className=\"headings\">\n          <span className=\"headings\"> QUEUE </span>\n          <span className=\"head\">{data}</span>\n        </Card.Title>\n      </Card>\n    </div>\n  );\n};\nexport default Heading;\n","/home/naeem/Documents/React_folder/FYP_IQBAL/react-task/src/Headings/pendingHeading.js",["123","124","125"],"import React from \"react\";\nimport { Card, ListGroup, ListGroupItem, Button } from \"react-bootstrap\";\nconst Heading = ({ data }) => {\n  return (\n    <div className=\"intialDataHeading\">\n      <Card\n        style={{\n          width: \"18rem\",\n          padding: \"10px 0 0 0\",\n          backgroundColor: \"green\",\n        }}\n        className=\"mainCard\"\n      >\n        <Card.Title className=\"headings\">\n          <span className=\"headings headingsSTATUS\"> COMPLETED</span>\n          <span className=\"head\">{data}</span>\n        </Card.Title>\n      </Card>\n    </div>\n  );\n};\nexport default Heading;\n","/home/naeem/Documents/React_folder/FYP_IQBAL/react-task/src/Headings/finalHeading.js",["126","127","128"],"import React from \"react\";\nimport { Card, ListGroup, ListGroupItem, Button } from \"react-bootstrap\";\nconst Heading = ({ data }) => {\n  return (\n    <div className=\"intialDataHeading\">\n      <Card\n        style={{ width: \"18rem\", padding: \"10px 0 0 0\" }}\n        className=\"mainCard\"\n      >\n        <Card.Title className=\"headings\">\n          <span className=\"headings\"> IN-PROCESS </span>\n\n          <span className=\"head\">{data}</span>\n        </Card.Title>\n      </Card>\n    </div>\n  );\n};\nexport default Heading;\n",{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":2,"column":10,"nodeType":"135","messageId":"136","endLine":2,"endColumn":15},{"ruleId":"137","severity":1,"message":"138","line":29,"column":13,"nodeType":"139","endLine":35,"endColumn":4},{"ruleId":"140","severity":1,"message":"141","line":62,"column":32,"nodeType":"139","messageId":"142","endLine":62,"endColumn":34},{"ruleId":"143","severity":1,"message":"144","line":139,"column":25,"nodeType":"145","endLine":145,"endColumn":26},{"ruleId":"133","severity":1,"message":"146","line":12,"column":18,"nodeType":"135","messageId":"136","endLine":12,"endColumn":31},{"ruleId":"133","severity":1,"message":"147","line":12,"column":33,"nodeType":"135","messageId":"136","endLine":12,"endColumn":40},{"ruleId":"140","severity":1,"message":"148","line":122,"column":42,"nodeType":"139","messageId":"142","endLine":122,"endColumn":44},{"ruleId":"140","severity":1,"message":"148","line":165,"column":47,"nodeType":"139","messageId":"142","endLine":165,"endColumn":49},{"ruleId":"133","severity":1,"message":"149","line":202,"column":9,"nodeType":"135","messageId":"136","endLine":202,"endColumn":16},{"ruleId":"150","severity":1,"message":"151","line":214,"column":5,"nodeType":"152","messageId":"153","endLine":216,"endColumn":6},{"ruleId":"133","severity":1,"message":"154","line":1,"column":38,"nodeType":"135","messageId":"136","endLine":1,"endColumn":48},{"ruleId":"133","severity":1,"message":"155","line":2,"column":8,"nodeType":"135","messageId":"136","endLine":2,"endColumn":22},{"ruleId":"133","severity":1,"message":"156","line":15,"column":10,"nodeType":"135","messageId":"136","endLine":15,"endColumn":30},{"ruleId":"133","severity":1,"message":"157","line":22,"column":10,"nodeType":"135","messageId":"136","endLine":22,"endColumn":18},{"ruleId":"133","severity":1,"message":"158","line":22,"column":20,"nodeType":"135","messageId":"136","endLine":22,"endColumn":31},{"ruleId":"137","severity":1,"message":"138","line":60,"column":13,"nodeType":"139","endLine":67,"endColumn":4},{"ruleId":"137","severity":1,"message":"159","line":67,"column":6,"nodeType":"160","endLine":67,"endColumn":8,"suggestions":"161"},{"ruleId":"133","severity":1,"message":"149","line":70,"column":9,"nodeType":"135","messageId":"136","endLine":70,"endColumn":16},{"ruleId":"140","severity":1,"message":"141","line":81,"column":36,"nodeType":"139","messageId":"142","endLine":81,"endColumn":38},{"ruleId":"143","severity":1,"message":"144","line":265,"column":25,"nodeType":"145","endLine":271,"endColumn":26},{"ruleId":"133","severity":1,"message":"162","line":2,"column":10,"nodeType":"135","messageId":"136","endLine":2,"endColumn":14},{"ruleId":"133","severity":1,"message":"163","line":2,"column":16,"nodeType":"135","messageId":"136","endLine":2,"endColumn":25},{"ruleId":"133","severity":1,"message":"164","line":2,"column":27,"nodeType":"135","messageId":"136","endLine":2,"endColumn":40},{"ruleId":"133","severity":1,"message":"165","line":2,"column":42,"nodeType":"135","messageId":"136","endLine":2,"endColumn":48},{"ruleId":"133","severity":1,"message":"166","line":3,"column":28,"nodeType":"135","messageId":"136","endLine":3,"endColumn":37},{"ruleId":"133","severity":1,"message":"167","line":3,"column":39,"nodeType":"135","messageId":"136","endLine":3,"endColumn":47},{"ruleId":"133","severity":1,"message":"168","line":4,"column":8,"nodeType":"135","messageId":"136","endLine":4,"endColumn":13},{"ruleId":"133","severity":1,"message":"169","line":5,"column":10,"nodeType":"135","messageId":"136","endLine":5,"endColumn":20},{"ruleId":"133","severity":1,"message":"170","line":4,"column":8,"nodeType":"135","messageId":"136","endLine":4,"endColumn":17},{"ruleId":"133","severity":1,"message":"171","line":80,"column":7,"nodeType":"135","messageId":"136","endLine":80,"endColumn":14},{"ruleId":"133","severity":1,"message":"164","line":2,"column":27,"nodeType":"135","messageId":"136","endLine":2,"endColumn":40},{"ruleId":"133","severity":1,"message":"165","line":2,"column":42,"nodeType":"135","messageId":"136","endLine":2,"endColumn":48},{"ruleId":"133","severity":1,"message":"162","line":3,"column":10,"nodeType":"135","messageId":"136","endLine":3,"endColumn":14},{"ruleId":"133","severity":1,"message":"163","line":3,"column":16,"nodeType":"135","messageId":"136","endLine":3,"endColumn":25},{"ruleId":"133","severity":1,"message":"164","line":3,"column":27,"nodeType":"135","messageId":"136","endLine":3,"endColumn":40},{"ruleId":"133","severity":1,"message":"165","line":3,"column":42,"nodeType":"135","messageId":"136","endLine":3,"endColumn":48},{"ruleId":"133","severity":1,"message":"166","line":4,"column":28,"nodeType":"135","messageId":"136","endLine":4,"endColumn":37},{"ruleId":"133","severity":1,"message":"167","line":4,"column":39,"nodeType":"135","messageId":"136","endLine":4,"endColumn":47},{"ruleId":"133","severity":1,"message":"168","line":5,"column":8,"nodeType":"135","messageId":"136","endLine":5,"endColumn":13},{"ruleId":"133","severity":1,"message":"172","line":50,"column":11,"nodeType":"135","messageId":"136","endLine":50,"endColumn":23},{"ruleId":"140","severity":1,"message":"148","line":50,"column":52,"nodeType":"139","messageId":"142","endLine":50,"endColumn":54},{"ruleId":"140","severity":1,"message":"173","line":57,"column":42,"nodeType":"139","messageId":"174","endLine":57,"endColumn":44},{"ruleId":"150","severity":1,"message":"151","line":76,"column":5,"nodeType":"152","messageId":"153","endLine":78,"endColumn":6},{"ruleId":"133","severity":1,"message":"175","line":3,"column":8,"nodeType":"135","messageId":"136","endLine":3,"endColumn":19},{"ruleId":"133","severity":1,"message":"170","line":4,"column":8,"nodeType":"135","messageId":"136","endLine":4,"endColumn":17},{"ruleId":"133","severity":1,"message":"171","line":7,"column":7,"nodeType":"135","messageId":"136","endLine":7,"endColumn":14},{"ruleId":"133","severity":1,"message":"176","line":46,"column":7,"nodeType":"135","messageId":"136","endLine":46,"endColumn":16},{"ruleId":"133","severity":1,"message":"177","line":47,"column":7,"nodeType":"135","messageId":"136","endLine":47,"endColumn":15},{"ruleId":"133","severity":1,"message":"178","line":2,"column":16,"nodeType":"135","messageId":"136","endLine":2,"endColumn":21},{"ruleId":"133","severity":1,"message":"163","line":2,"column":23,"nodeType":"135","messageId":"136","endLine":2,"endColumn":32},{"ruleId":"133","severity":1,"message":"164","line":2,"column":34,"nodeType":"135","messageId":"136","endLine":2,"endColumn":47},{"ruleId":"133","severity":1,"message":"165","line":2,"column":49,"nodeType":"135","messageId":"136","endLine":2,"endColumn":55},{"ruleId":"133","severity":1,"message":"163","line":2,"column":16,"nodeType":"135","messageId":"136","endLine":2,"endColumn":25},{"ruleId":"133","severity":1,"message":"164","line":2,"column":27,"nodeType":"135","messageId":"136","endLine":2,"endColumn":40},{"ruleId":"133","severity":1,"message":"165","line":2,"column":42,"nodeType":"135","messageId":"136","endLine":2,"endColumn":48},{"ruleId":"133","severity":1,"message":"163","line":2,"column":16,"nodeType":"135","messageId":"136","endLine":2,"endColumn":25},{"ruleId":"133","severity":1,"message":"164","line":2,"column":27,"nodeType":"135","messageId":"136","endLine":2,"endColumn":40},{"ruleId":"133","severity":1,"message":"165","line":2,"column":42,"nodeType":"135","messageId":"136","endLine":2,"endColumn":48},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'MDBFormInline' is defined but never used.","'MDBIcon' is defined but never used.","Array.prototype.filter() expects a return value from arrow function.","'headers' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Dimensions' is defined but never used.","'ComponentsData' is defined but never used.","'isCompositeComponent' is defined but never used.","'readMore' is assigned a value but never used.","'setReadMore' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getDetails'. Either include it or remove the dependency array.","ArrayExpression",["181"],"'Card' is defined but never used.","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'Button' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'Pagination' is defined but never used.","'FinalData' is defined but never used.","'Heading' is assigned a value but never used.","'hospitalFind' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'PendingData' is defined but never used.","'pushToken' is assigned a value but never used.","'onUpdate' is assigned a value but never used.","'Title' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},"Update the dependencies array to be: [getDetails]",{"range":"184","text":"185"},[2105,2107],"[getDetails]"]